AllCops:
  DisplayCopNames: true
  DisplayStyleGuide: true
  TargetRubyVersion: 3.1
  NewCops: enable

# This is one part of the style guide that doesn't express a preference, it just
# suggests you make a choice
Layout/DotPosition:
  EnforcedStyle: trailing

# Relates to the indentation of if/when/(etc.) blocks when the initial keyword
# is indented as part of a variable assignment.
#
# Our preference is that the rubocop default conflicts with our 80-character
# line restriction, leaving less space for code inside nested blocks. We make
# this change at the cost of a little bit of readability.
#
#     # bad (although the Rubocop default):
#     thing = if x > 42
#               thing!
#             else
#               other_thing!
#             end
#
#     # good (preferred):
#     thing = if x > 42
#       thing!
#     else
#       other_thing!
#     end
#
#     # also acceptable
#     thing =
#       if x > 42
#         thing!
#       else
#         other_thing!
#       end
Layout/EndAlignment:
  EnforcedStyleAlignWith: variable
  StyleGuide: https://github.com/BridgeU/bridgeu/commit/d19e558ec0246452a2962dcd6e6e5a915c1a8a6b

# This cop is enabled when TargetRubyVersion is 2.3 or higher
#
# Implementing its advice will help with Ruby 3.0 compatibility, but isn't a
# trivial change, and might not even be possible until our gem dependencies are
# updated to properly handle frozen strings.
#
# See: https://wyeworks.com/blog/2015/12/1/immutable-strings-in-ruby-2-dot-3
Style/FrozenStringLiteralComment:
  Enabled: false

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

Style/NumericLiterals:
  Exclude:
    # Rails separates the schema timestamp with underscores like 2022_12_23_225040
    - db/schema.rb

Style/PercentLiteralDelimiters:
  # Enforce Ruby style guide percent-delimiters
  # Redundant with Rubocop 0.48.1
  PreferredDelimiters:
    default: ()
    "%i": "[]"
    "%I": "[]"
    "%r": "{}"
    "%w": "[]"
    "%W": "[]"

Style/StringLiterals:
  EnforcedStyle: double_quotes
  StyleGuide: https://www.viget.com/articles/just-use-double-quoted-ruby-strings

Gemspec/DeprecatedAttributeAssignment: # (new in 1.10)
  Enabled: true
Layout/SpaceBeforeBrackets: # (new in 1.7)
  Enabled: true
Lint/AmbiguousAssignment: # (new in 1.7)
  Enabled: true
Lint/DeprecatedConstants: # (new in 1.8)
  Enabled: true
Lint/DuplicateBranch: # (new in 1.3)
  Enabled: true
Lint/DuplicateRegexpCharacterClassElement: # (new in 1.1)
  Enabled: true
Lint/EmptyBlock: # (new in 1.1)
  Enabled: true
Lint/EmptyClass: # (new in 1.3)
  Enabled: true
Lint/LambdaWithoutLiteralBlock: # (new in 1.8)
  Enabled: true
Lint/NoReturnInBeginEndBlocks: # (new in 1.2)
  Enabled: true
Lint/NumberedParameterAssignment: # (new in 1.9)
  Enabled: true
Lint/OrAssignmentToConstant: # (new in 1.9)
  Enabled: true
Lint/RedundantDirGlobSort: # (new in 1.8)
  Enabled: true
Lint/SymbolConversion: # (new in 1.9)
  Enabled: true
Lint/ToEnumArguments: # (new in 1.1)
  Enabled: true
Lint/TripleQuotes: # (new in 1.9)
  Enabled: true
Lint/UnexpectedBlockArity: # (new in 1.5)
  Enabled: true
Lint/UnmodifiedReduceAccumulator: # (new in 1.1)
  Enabled: true
Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: true
Style/CollectionCompact: # (new in 1.2)
  Enabled: true
Style/DocumentDynamicEvalDefinition: # (new in 1.1)
  Enabled: true
Style/EndlessMethod: # (new in 1.8)
  Enabled: true
Style/HashConversion: # (new in 1.10)
  Enabled: true
Style/HashExcept: # (new in 1.7)
  Enabled: true
Style/IfWithBooleanLiteralBranches: # (new in 1.9)
  Enabled: true
Style/NegatedIfElseCondition: # (new in 1.2)
  Enabled: true
Style/NilLambda: # (new in 1.3)
  Enabled: true
Style/RedundantArgument: # (new in 1.4)
  Enabled: true
Style/StringChars: # (new in 1.12)
  Enabled: true
Style/SwapValues: # (new in 1.1)
  Enabled: true

Style/Documentation:
  Enabled: false

Metrics:
  Enabled: false
